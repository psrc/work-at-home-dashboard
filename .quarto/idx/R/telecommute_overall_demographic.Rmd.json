{"title":"part2telecommute","markdown":{"yaml":{"title":"part2telecommute","author":"suzanne","date":"2024-07-12","output":"html_document"},"containsRefs":false,"markdown":"\n\nFirst run telecommute_preprocess These are the basic summaries below, and show work at home by demographic characteristics.\n\n```{r setup, include=FALSE}\nlibrary(data.table)\nlibrary(stringr)\nlibrary(travelSurveyTools)\nlibrary(psrcelmer)\nlibrary(dplyr)\nlibrary(psrcplot)\nlibrary(tidyverse)\nlibrary(forcats)\nsource('survey-23-preprocess.R')\n\n```\n\n```{r}\n\ntelecommute_or_not<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = 'survey_year',\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary<-telecommute_or_not$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')\nstatic<-static_line_chart(telecommute_summary, y='prop', x='survey_year', fill='telecommute_freq_cond',lwidth=1.5) + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+ scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,0.6))\n\nstatic\ninter\nwrite.csv(telecommute_summary,'telecommuteornot_summary_trend.csv')\n```\n\nWho telecommuted Hybrid vs Not?\n\n```{r}\n\ntelecommute_status <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = 'survey_year',\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary<-telecommute_status$summary$wtd%>%mutate(telecommute_status=forcats::fct_reorder(telecommute_status, -prop))%>%filter(telecommute_status!='Fully In Person')\nstatic<-static_line_chart(telecommute_summary, y='prop', x='survey_year', fill='telecommute_status',lwidth=1.5) + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+ scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,0.3))\n\ninter<-interactive_column_chart(telecommute_summary, y='prop', x='telecommute_status', fill='survey_year', xlabel='Work Location Status', ylabel='Worker Share')\nstatic\ninter\nwrite.csv(telecommute_summary,'telecommute_summary_trend.csv')\n```\n\n```{r}\n\ntelecommute_status_broad <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status_broad',\n                               summarize_by = 'survey_year',\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary<-telecommute_status_broad$summary$wtd%>%mutate(telecommute_status_broad=forcats::fct_reorder(telecommute_status_broad, prop))%>%filter(!telecommute_status_broad %in% c('Fully At Home', 'Fully In Person'))\nstatic<-static_line_chart(telecommute_summary, y='prop', x='survey_year', fill='telecommute_status_broad', lwidth=1.5) + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.2))\n\ninter<-interactive_column_chart(telecommute_summary, y='prop', x='telecommute_status_broad', fill='survey_year', xlabel='Work Location Status', ylabel='Worker Share')\nstatic\ninter\nwrite.csv(telecommute_summary,'telecommute_summary_trend_broad.csv')\n```\n\nLocation Where did people work who telecommuted? What modes did they use prior in 2019 by location?\n\nWhere did people live who telecommuted? What modes did they use prior in 2019 by location?\n\nHousehold Income\n\n```{r}\n\ntelecommute_or_not_inc <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'hhincome_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_inc<-telecommute_or_not_inc$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%filter(hhincome_broad!='Prefer not to answer')%>%mutate(moe=prop_se*1.645)%>%mutate(hhincome_broad=fct_relevel(hhincome_broad,\n                                                  c('Under $75,000',\n                                                      '$75,000-$199,999',\n                                                      '$200,000 or more')))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_inc, y='prop', x='hhincome_broad', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_inc,'telecommute_summary_inc.csv')\n\n```\n\nRace and Ethnicity\n\nGender\n\n```{r}\n\ntelecommute_or_not_gender <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'gender'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_gend<-telecommute_or_not_gender$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(gender=recode(gender, \t\n'Boy/Man (cisgender or transgender)' = \"Man/Boy\", 'Girl/Woman (cisgender or transgender)'  = \"Woman/Girl\"))%>%filter(!gender %in% c('Non-binary/Something else fits better', 'Prefer not to answer'))\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_gend, y='prop', x='gender', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_gend,'telecommute_summary_gender.csv')\n\n```\n\nGender\n\n```{r}\n\ntelecommute_or_not_gender <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'gender'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_gend<-telecommute_or_not_gender$summary$wtd%>%filter(survey_year=='2023')%>%mutate(gender=recode(gender, \t\n'Boy/Man (cisgender or transgender)' = \"Man/Boy\", 'Girl/Woman (cisgender or transgender)'  = \"Woman/Girl\"))%>%filter(!gender %in% c('Non-binary/Something else fits better', 'Prefer not to answer'))\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_gend, y='prop', x='gender', fill='telecommute_status', pos='stack') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_gend,'telecommute_summary_gender.csv')\n\n```\n\n```{r}\n\ntelecommute_or_not_race<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'race_category_2023_b'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_race<-telecommute_or_not_race$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%filter(!race_category_2023_b %in% c('Missing/No response', 'Child'))%>%mutate(moe=prop_se*1.645)\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_race, y='prop', x='race_category_2023_b', fill='survey_year', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_race,'telecommute_summary_race.csv')\n\n```\n\n```{r}\n\nindustryrace<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'industry_cond',\n                               summarize_by = c('survey_year', 'race_category'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\nindustry_race<-industryrace$summary$wtd%>%filter(survey_year=='2023')%>%filter(!race_category%in% c('Child', 'Missing'))%>%mutate(moe=prop_se*1.645)\n                                                                                                   \nstatic<-static_column_chart(industry_race, y='prop', x='race_category', fill='industry_cond', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_race,'telecommute_summary_race.csv')\n\n```\n\nGender\n\n```{r}\n\ntelecommute_or_not_age<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'age_grp_2'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_age<-telecommute_or_not_age$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(!is.na(age_grp_2))%>%\n  filter(age_grp_2!='Under 18')\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_age, y='prop', x='age_grp_2', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_age,'telecommute_summary_age.csv')\n```\n\nJob Industry\n\n```{r}\n\ntelecommute_or_not_ind <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'industry_cond'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_ind<-telecommute_or_not_ind$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%mutate(industry_cond=forcats::fct_reorder(industry_cond, prop))%>%filter(industry_cond!=\"Missing: Skip Logic\")\nstatic<-static_bar_chart(telecommute_summary_ind, x='prop', y='industry_cond', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_ind,'telecommute_summary_industry.csv')\n\n```\n\n```{r}\n\ntelecommute_or_not_edu<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'edu_simple'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_edu<-telecommute_or_not_edu$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(edu_simple!=\"Missing: Skip Logic\")\nstatic<-static_bar_chart(telecommute_summary_edu, x='prop', y='edu_simple', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_ind,'telecommute_summary_education.csv')\n\n```\n\nSexuality\n\n```{r}\n\ntelecommute_or_not_sex <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'sexuality_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sex<-telecommute_or_not_sex$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(sexuality_broad!=\"Missing: Skip Logic\")\nstatic<-static_bar_chart(telecommute_summary_sex, x='prop', y='sexuality_broad', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_ind,'telecommute_summary_sexuality.csv')\n\n```\n\nVehicle Count\n\n```{r}\n\ntelecommute_or_not_veh <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'vehicle_count_simple'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_veh<-telecommute_or_not_veh$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)\n\nstatic<-static_bar_chart(telecommute_summary_veh, x='prop', y='vehicle_count_simple', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_veh,'telecommute_summary_vehicles.csv')\n\n```\n\n```{r}\n\nindustry_income<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'industry_cond',\n                               summarize_by = c('survey_year', 'hhincome_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\nindustry_income<-industry_income$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)\n\nstatic<-static_column_chart(industry_income, y='prop', x='hhincome_broad', fill='industry_cond', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(industry_income, 'industry_income.csv')\n\n```\n\n```{r}\n\nindustry_race<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'industry_cond',\n                               summarize_by = c('survey_year', 'race_category'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\nindustry_race<-industry_race$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)\n\nstatic<-static_column_chart(industry_race, y='prop', x='race_category', fill='industry_cond', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(industry_race, 'industry_race.csv')\n\n```\n\n```{r}\n\ntelecommute_status_inc<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'hhincome_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_inc<-telecommute_status_inc$summary$wtd%>%filter(survey_year=='2023')%>%filter(hhincome_broad!='Prefer not to answer')%>%mutate(moe=prop_se*1.645)%>%mutate(hhincome_broad=fct_relevel(hhincome_broad,\n                                                  c('Under $50,000', \n                                                      '$50,000-$74,999',\n                                                      '$75,000-$99,999',\n                                                      '$100,000-$199,000',\n                                                      '$200,000 or more')))%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,prop))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_inc, y='prop', x='hhincome_broad', fill='telecommute_status') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_inc,'telecommute_summary_inc.csv')\n\n```\n\n```{r}\n\ntelecommute_status_sector<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'industry_cond'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sector<-telecommute_status_sector$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(industry_cond!=\"Missing: Skip Logic\")%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,est))%>%\n  mutate(industry_cond=fct_reorder(industry_cond,est))%>%filter(telecommute_status!='Fully In Person')\n                                                                                                                                                                                                           \n\n\nstatic<-static_bar_chart(telecommute_summary_sector, x='est', y='industry_cond', fill='telecommute_status', pos='stack') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))\n   \nstatic\n\nwrite.csv(telecommute_summary_sector,'telecommute_summary_industry_hybrid.csv')\n\n```\n\n```{r}\n\ntelecommute_status_sector<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'industry'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sector<-telecommute_status_sector$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(industry!=\"Missing: Skip Logic\")%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,prop))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_sector, y='prop', x='industry', fill='telecommute_status') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_sector,'telecommute_summary_industrydetail_hybrid.csv')\n\n```\n\n```{r}\n\ntelecommute_status_sector<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'industry_usim'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sector<-telecommute_status_sector$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(industry_usim!=\"Missing: Skip Logic\")%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,prop))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_sector, y='prop', x='industry_usim', fill='telecommute_status') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_sector,'telecommute_summary_industry_usim.csv')\n\n```\n","srcMarkdownNoYaml":"\n\nFirst run telecommute_preprocess These are the basic summaries below, and show work at home by demographic characteristics.\n\n```{r setup, include=FALSE}\nlibrary(data.table)\nlibrary(stringr)\nlibrary(travelSurveyTools)\nlibrary(psrcelmer)\nlibrary(dplyr)\nlibrary(psrcplot)\nlibrary(tidyverse)\nlibrary(forcats)\nsource('survey-23-preprocess.R')\n\n```\n\n```{r}\n\ntelecommute_or_not<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = 'survey_year',\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary<-telecommute_or_not$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')\nstatic<-static_line_chart(telecommute_summary, y='prop', x='survey_year', fill='telecommute_freq_cond',lwidth=1.5) + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+ scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,0.6))\n\nstatic\ninter\nwrite.csv(telecommute_summary,'telecommuteornot_summary_trend.csv')\n```\n\nWho telecommuted Hybrid vs Not?\n\n```{r}\n\ntelecommute_status <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = 'survey_year',\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary<-telecommute_status$summary$wtd%>%mutate(telecommute_status=forcats::fct_reorder(telecommute_status, -prop))%>%filter(telecommute_status!='Fully In Person')\nstatic<-static_line_chart(telecommute_summary, y='prop', x='survey_year', fill='telecommute_status',lwidth=1.5) + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+ scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,0.3))\n\ninter<-interactive_column_chart(telecommute_summary, y='prop', x='telecommute_status', fill='survey_year', xlabel='Work Location Status', ylabel='Worker Share')\nstatic\ninter\nwrite.csv(telecommute_summary,'telecommute_summary_trend.csv')\n```\n\n```{r}\n\ntelecommute_status_broad <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status_broad',\n                               summarize_by = 'survey_year',\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary<-telecommute_status_broad$summary$wtd%>%mutate(telecommute_status_broad=forcats::fct_reorder(telecommute_status_broad, prop))%>%filter(!telecommute_status_broad %in% c('Fully At Home', 'Fully In Person'))\nstatic<-static_line_chart(telecommute_summary, y='prop', x='survey_year', fill='telecommute_status_broad', lwidth=1.5) + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.2))\n\ninter<-interactive_column_chart(telecommute_summary, y='prop', x='telecommute_status_broad', fill='survey_year', xlabel='Work Location Status', ylabel='Worker Share')\nstatic\ninter\nwrite.csv(telecommute_summary,'telecommute_summary_trend_broad.csv')\n```\n\nLocation Where did people work who telecommuted? What modes did they use prior in 2019 by location?\n\nWhere did people live who telecommuted? What modes did they use prior in 2019 by location?\n\nHousehold Income\n\n```{r}\n\ntelecommute_or_not_inc <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'hhincome_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_inc<-telecommute_or_not_inc$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%filter(hhincome_broad!='Prefer not to answer')%>%mutate(moe=prop_se*1.645)%>%mutate(hhincome_broad=fct_relevel(hhincome_broad,\n                                                  c('Under $75,000',\n                                                      '$75,000-$199,999',\n                                                      '$200,000 or more')))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_inc, y='prop', x='hhincome_broad', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_inc,'telecommute_summary_inc.csv')\n\n```\n\nRace and Ethnicity\n\nGender\n\n```{r}\n\ntelecommute_or_not_gender <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'gender'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_gend<-telecommute_or_not_gender$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(gender=recode(gender, \t\n'Boy/Man (cisgender or transgender)' = \"Man/Boy\", 'Girl/Woman (cisgender or transgender)'  = \"Woman/Girl\"))%>%filter(!gender %in% c('Non-binary/Something else fits better', 'Prefer not to answer'))\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_gend, y='prop', x='gender', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_gend,'telecommute_summary_gender.csv')\n\n```\n\nGender\n\n```{r}\n\ntelecommute_or_not_gender <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'gender'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_gend<-telecommute_or_not_gender$summary$wtd%>%filter(survey_year=='2023')%>%mutate(gender=recode(gender, \t\n'Boy/Man (cisgender or transgender)' = \"Man/Boy\", 'Girl/Woman (cisgender or transgender)'  = \"Woman/Girl\"))%>%filter(!gender %in% c('Non-binary/Something else fits better', 'Prefer not to answer'))\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_gend, y='prop', x='gender', fill='telecommute_status', pos='stack') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_gend,'telecommute_summary_gender.csv')\n\n```\n\n```{r}\n\ntelecommute_or_not_race<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'race_category_2023_b'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_race<-telecommute_or_not_race$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%filter(!race_category_2023_b %in% c('Missing/No response', 'Child'))%>%mutate(moe=prop_se*1.645)\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_race, y='prop', x='race_category_2023_b', fill='survey_year', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_race,'telecommute_summary_race.csv')\n\n```\n\n```{r}\n\nindustryrace<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'industry_cond',\n                               summarize_by = c('survey_year', 'race_category'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\nindustry_race<-industryrace$summary$wtd%>%filter(survey_year=='2023')%>%filter(!race_category%in% c('Child', 'Missing'))%>%mutate(moe=prop_se*1.645)\n                                                                                                   \nstatic<-static_column_chart(industry_race, y='prop', x='race_category', fill='industry_cond', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_race,'telecommute_summary_race.csv')\n\n```\n\nGender\n\n```{r}\n\ntelecommute_or_not_age<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'age_grp_2'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_age<-telecommute_or_not_age$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(!is.na(age_grp_2))%>%\n  filter(age_grp_2!='Under 18')\n                                                                                                   \nstatic<-static_column_chart(telecommute_summary_age, y='prop', x='age_grp_2', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,.75))\n\nstatic\n\nwrite.csv(telecommute_summary_age,'telecommute_summary_age.csv')\n```\n\nJob Industry\n\n```{r}\n\ntelecommute_or_not_ind <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'industry_cond'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_ind<-telecommute_or_not_ind$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%mutate(industry_cond=forcats::fct_reorder(industry_cond, prop))%>%filter(industry_cond!=\"Missing: Skip Logic\")\nstatic<-static_bar_chart(telecommute_summary_ind, x='prop', y='industry_cond', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_ind,'telecommute_summary_industry.csv')\n\n```\n\n```{r}\n\ntelecommute_or_not_edu<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'edu_simple'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_edu<-telecommute_or_not_edu$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(edu_simple!=\"Missing: Skip Logic\")\nstatic<-static_bar_chart(telecommute_summary_edu, x='prop', y='edu_simple', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_ind,'telecommute_summary_education.csv')\n\n```\n\nSexuality\n\n```{r}\n\ntelecommute_or_not_sex <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'sexuality_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sex<-telecommute_or_not_sex$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(sexuality_broad!=\"Missing: Skip Logic\")\nstatic<-static_bar_chart(telecommute_summary_sex, x='prop', y='sexuality_broad', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_ind,'telecommute_summary_sexuality.csv')\n\n```\n\nVehicle Count\n\n```{r}\n\ntelecommute_or_not_veh <- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_freq_cond',\n                               summarize_by = c('survey_year', 'vehicle_count_simple'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_veh<-telecommute_or_not_veh$summary$wtd%>%filter(telecommute_freq_cond=='1+ days per week')%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)\n\nstatic<-static_bar_chart(telecommute_summary_veh, x='prop', y='vehicle_count_simple', fill='survey_year') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_veh,'telecommute_summary_vehicles.csv')\n\n```\n\n```{r}\n\nindustry_income<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'industry_cond',\n                               summarize_by = c('survey_year', 'hhincome_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\nindustry_income<-industry_income$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)\n\nstatic<-static_column_chart(industry_income, y='prop', x='hhincome_broad', fill='industry_cond', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(industry_income, 'industry_income.csv')\n\n```\n\n```{r}\n\nindustry_race<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'industry_cond',\n                               summarize_by = c('survey_year', 'race_category'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\nindustry_race<-industry_race$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)\n\nstatic<-static_column_chart(industry_race, y='prop', x='race_category', fill='industry_cond', moe='moe') + theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(industry_race, 'industry_race.csv')\n\n```\n\n```{r}\n\ntelecommute_status_inc<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'hhincome_broad'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_inc<-telecommute_status_inc$summary$wtd%>%filter(survey_year=='2023')%>%filter(hhincome_broad!='Prefer not to answer')%>%mutate(moe=prop_se*1.645)%>%mutate(hhincome_broad=fct_relevel(hhincome_broad,\n                                                  c('Under $50,000', \n                                                      '$50,000-$74,999',\n                                                      '$75,000-$99,999',\n                                                      '$100,000-$199,000',\n                                                      '$200,000 or more')))%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,prop))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_inc, y='prop', x='hhincome_broad', fill='telecommute_status') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_inc,'telecommute_summary_inc.csv')\n\n```\n\n```{r}\n\ntelecommute_status_sector<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'industry_cond'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sector<-telecommute_status_sector$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(industry_cond!=\"Missing: Skip Logic\")%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,est))%>%\n  mutate(industry_cond=fct_reorder(industry_cond,est))%>%filter(telecommute_status!='Fully In Person')\n                                                                                                                                                                                                           \n\n\nstatic<-static_bar_chart(telecommute_summary_sector, x='est', y='industry_cond', fill='telecommute_status', pos='stack') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))\n   \nstatic\n\nwrite.csv(telecommute_summary_sector,'telecommute_summary_industry_hybrid.csv')\n\n```\n\n```{r}\n\ntelecommute_status_sector<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'industry'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sector<-telecommute_status_sector$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(industry!=\"Missing: Skip Logic\")%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,prop))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_sector, y='prop', x='industry', fill='telecommute_status') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_sector,'telecommute_summary_industrydetail_hybrid.csv')\n\n```\n\n```{r}\n\ntelecommute_status_sector<- summarize_weighted(hts_data= worker_list,\n                               summarize_var = 'telecommute_status',\n                               summarize_by = c('survey_year', 'industry_usim'),\n                               id_cols=c('hh_id', 'person_id'),\n                               wt_cols=c('hh_weight', 'person_weight'),\n                               wtname= 'person_weight'\n                               )\n\n```\n\n```{r}\n\ntelecommute_summary_sector<-telecommute_status_sector$summary$wtd%>%filter(survey_year=='2023')%>%mutate(moe=prop_se*1.645)%>%filter(industry_usim!=\"Missing: Skip Logic\")%>%\n  mutate(telecommute_status=fct_reorder(telecommute_status,prop))\n                                                                                                                                                                                                           \n\n\nstatic<-static_column_chart(telecommute_summary_sector, y='prop', x='industry_usim', fill='telecommute_status') + theme(axis.text.x=element_text(size=12), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))+\n   scale_y_continuous(labels = scales::percent_format(scale = 100), limits=c(0,1))\n\nstatic\n\nwrite.csv(telecommute_summary_sector,'telecommute_summary_industry_usim.csv')\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"telecommute_overall_demographic.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","editor":"visual","title":"part2telecommute","author":"suzanne","date":"2024-07-12"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}